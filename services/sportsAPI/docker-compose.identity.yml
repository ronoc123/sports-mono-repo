version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sportsapi-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=StrongPassword123!
      - MSSQL_PID=Express
    ports:
      - "1434:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - sportsapi-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P StrongPassword123! -Q 'SELECT 1'" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Identity Service
  identity-service:
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    container_name: sportsapi-identity
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=SportsAPI_Identity;User Id=sa;Password=StrongPassword123!;TrustServerCertificate=True;MultipleActiveResultSets=true
      - Jwt__Key=YourSuperSecretKeyThatIsAtLeast32CharactersLong!
      - Jwt__Issuer=SportsAPI.IdentityService
      - Jwt__Audience=SportsAPI.Client
      - Jwt__AccessTokenExpirationMinutes=60
      - Jwt__RefreshTokenExpirationDays=7
      - Google__ClientId=your-google-client-id.apps.googleusercontent.com
      - Google__ClientSecret=your-google-client-secret
    ports:
      - "5081:8080"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - sportsapi-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  sqlserver_data:
    driver: local

networks:
  sportsapi-network:
    driver: bridge
